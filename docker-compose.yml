version: "3"
services:
  api-todolist:
    image: atilarampazo/php
    container_name: api-todolist
    ports:
      - 8002:8002
    volumes:
      - "./api:/app"
    networks:
      - todolist-network
    depends_on:
      - db-todolist
    restart: unless-stopped
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  application-todolist:
    build:
      dockerfile: ./application/Dockerfile
      context: .
    container_name: application-todolist

    ports:
      - 8001:3000
    volumes:
      - ./application:/usr/src/app
    networks:
      - todolist-network
    restart: unless-stopped
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  db-todolist:
    image: postgres
    container_name: db-todolist
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "5432:5432"
    volumes:
      - "pgsql:/var/lib/postgresql/data"
    networks:
      - todolist-network
    restart: unless-stopped
    deploy:
      placement:
        constraints: [node.role === manager]
  pg-admin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_USER}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_PASSWORD}"
    ports:
      - "16543:80"
    networks:
      - todolist-network
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - db-todolist
    restart: unless-stopped
    deploy:
      placement:
        constraints: [node.role === manager]
  nginx-todolist:
    container_name: nginx-todolist
    image: nginx:1.17.8
    ports:
      - 80:80
    volumes:
      - ./server/conf:/etc/nginx/conf.d
      - /etc/hosts:/etc/hosts
    links:
      - api-todolist
    networks:
      - todolist-network
    depends_on:
      - application-todolist
      - api-todolist
    restart: unless-stopped
    deploy:
      placement:
        constraints: [node.role === manager]
        
networks:
  todolist-network:

volumes:
  pgsql:
    driver: local
  pgadmin:
    driver: local
